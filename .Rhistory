country_loss <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
## Data curation #################
# Select down to just total area of patches lost
country_loss <- country_loss %>%
select(Township, Year, Total.Area.of.Loss.Patches) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
country_loss <- na.omit(country_loss)
hist(country_loss)
?hist
hist(country_loss$patch_loss_area)
hist(country_loss$patch_loss_area, breaks = 5000)
hist(country_loss$patch_loss_area, breaks = 500)
hist(country_loss$patch_loss_area, breaks = 50)
hist(country_loss$patch_loss_area, breaks = 10)
hist(country_loss$patch_loss_area, breaks = 50)
hist(log(country_loss$patch_loss_area), breaks = 50)
hist(log(country_loss$patch_loss_area), breaks = 100)
hist(log(country_loss$patch_loss_area), breaks = 200)
hist(country_loss$patch_loss_area, breaks = 50)
country_loss$recip_root <- -1/(country_loss$patch_loss_area)^0.5
hist(country_loss$recip_root, breaks = 100)
hist(country_loss$recip_root, breaks = 200)
hist(country_loss$recip_root, breaks = 50)
country_loss$recip <- -1/country_loss$patch_loss_area
country_loss$recip <- -1/country_loss$patch_loss_area
hist(country_loss$recip, breaks = 50)
# Log transform
hist(log(country_loss$patch_loss_area), breaks = 100)
hist(country_loss$patch_loss_area, breaks = 50)
country_loss$cube_root <- (country_loss$patch_loss_area)^(0.3333)
hist(country_loss$cube_root, breaks = 50)
country_loss$square_root <- (country_loss$patch_loss_area)^(0.5)
hist(country_loss$square_root, breaks = 50)
plot(country_loss_sum)
country_loss <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
country_loss <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
## Data curation #################
# Select down to just total area of patches lost
country_loss <- country_loss %>%
select(-X) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
country_loss <- na.omit(country_loss)
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
## Data curation #################
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
allyears_pertown <- na.omit(allyears_pertown)
## * Per town loss across all years  ###########
# Initial distribution
hist(allyears_pertown$patch_loss_area, breaks = 50)
allyears_pertown$square_root <- (allyears_pertown$patch_loss_area)^(0.5)
allyears_pertown$cube_root <- (allyears_pertown$patch_loss_area)^(0.3333)
hist(country_loss$square_root, breaks = 50)
hist(allyears_pertown$square_root, breaks = 50)
# Right skew. Need to go down the ladder
# Square root, θ = 1/2
allyears_pertown$square_root <- (allyears_pertown$patch_loss_area)^(0.5)
hist(allyears_pertown$square_root, breaks = 50)
# Cube root, θ = 1/3
allyears_pertown$cube_root <- (allyears_pertown$patch_loss_area)^(0.3333)
hist(allyears_pertown$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown$patch_loss_area), breaks = 100)
# Reciprocal root, θ = -1/2
allyears_pertown$recip_root <- -1/(allyears_pertown$patch_loss_area)^0.5
hist(allyears_pertown$recip_root, breaks = 50)
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(township = Township) %>%
rename(year = Year) %>%
rename(number_patches = `Number.of.Loss.Patches`) %>%
rename(avg_patch_area = Avg.Patch.Size) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
View(allyears_pertown)
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(township = Township) %>%
rename(year = Year) %>%
rename(number_patches = `Number.of.Loss.Patches`) %>%
rename(avg_patch_area = Avg.Patch.Size) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
allyears_pertown <- na.omit(allyears_pertown)
# Initial distribution
hist(allyears_pertown$patch_loss_area, breaks = 50)
# Right skew. Need to go down the ladder
# Square root, θ = 1/2
allyears_pertown$square_root <- (allyears_pertown$patch_loss_area)^(0.5)
hist(allyears_pertown$square_root, breaks = 50)
# Cube root, θ = 1/3
allyears_pertown$cube_root <- (allyears_pertown$patch_loss_area)^(0.3333)
hist(allyears_pertown$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown$patch_loss_area), breaks = 100)
# Reciprocal root, θ = -1/2
allyears_pertown$recip_root <- -1/(allyears_pertown$patch_loss_area)^0.5
hist(allyears_pertown$recip_root, breaks = 50)
## * Total loss for country across all years ##########
# Average loss per township
country_loss_avg <- country_loss %>%
group_by(Year) %>%
summarize(avg = mean(patch_loss_area))
# Sum of losses in all townships
country_loss_sum <- country_loss %>%
group_by(Year) %>%
summarize(sum = sum(patch_loss_area))
plot(country_loss_sum)
# Convert to time series
country_loss_sum <- ts(country_loss_sum, start = 2001,
end = 2017, frequency = 5)
country_loss <- ts(country_loss, start = 2001,
end = 2017, frequency = 5)
# Decompose country loss into components
decomposed <- decompose(country_loss)
plot(decomposed)
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(township = Township) %>%
rename(year = Year) %>%
rename(number_patches = `Number.of.Loss.Patches`) %>%
rename(avg_patch_area = Avg.Patch.Size) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
allyears_pertown <- na.omit(allyears_pertown)
allyears_pertown_pre <- allyears_pertown %>%
filter(year < 2011)
allyears_pertown_post <- allyears_pertown %>%
filter(year >= 2011)
View(allyears_pertown_post)
View(allyears_pertown_pre)
# Initial distribution
hist(allyears_pertown_pre$patch_loss_area, breaks = 50)
hist(allyears_pertown_post$patch_loss_area, breaks = 50)
# Right skew. Need to go down the ladder
# Square root, θ = 1/2
allyears_pertown_pre$square_root <- (allyears_pertown$patch_loss_area)^(0.5)
hist(allyears_pertown_pre$square_root, breaks = 50)
allyears_pertown_pre <- allyears_pertown %>%
filter(year < 2011)
allyears_pertown_post <- allyears_pertown %>%
filter(year >= 2011)
# Right skew. Need to go down the ladder
# Square root, θ = 1/2
allyears_pertown_pre$square_root <- (allyears_pertown$patch_loss_area)^(0.5)
allyears_pertown_pre <- allyears_pertown %>%
filter(year < 2011)
allyears_pertown_post <- allyears_pertown %>%
filter(year >= 2011)
# Right skew. Need to go down the ladder
# Square root, θ = 1/2
allyears_pertown_pre$square_root <- (allyears_pertown_pre$patch_loss_area)^(0.5)
hist(allyears_pertown_pre$square_root, breaks = 50)
allyears_pertown_post$square_root <- (allyears_pertown_post$patch_loss_area)^(0.5)
hist(allyears_pertown_post$square_root, breaks = 50)
allyears_pertown_pre$cube_root <- (allyears_pertown_pre$patch_loss_area)^(0.3333)
hist(allyears_pertown_pre$cube_root, breaks = 50)
allyears_pertown_post$cube_root <- (allyears_pertown_post$patch_loss_area)^(0.3333)
hist(allyears_pertown_post$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 100)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 100)
# Initial distributions
hist(allyears_pertown_pre$patch_loss_area, breaks = 50)
hist(allyears_pertown_post$patch_loss_area, breaks = 50)
# Initial distributions
hist(allyears_pertown_pre$patch_loss_area, breaks = 10)
hist(allyears_pertown_post$patch_loss_area, breaks = 10)
hist(allyears_pertown_pre$patch_loss_area, breaks = 50)
hist(allyears_pertown_post$patch_loss_area, breaks = 50)
allyears_pertown_pre$recip_root <- -1/(allyears_pertown_pre$patch_loss_area)^0.5
hist(allyears_pertown_pre$recip_root, breaks = 50)
allyears_pertown_post$recip_root <- -1/(allyears_pertown_post$patch_loss_area)^0.5
hist(allyears_pertown_post$recip_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 100)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 100)
allyears_pertown_pre$cube_root <- (allyears_pertown_pre$patch_loss_area)^(0.3333)
hist(allyears_pertown_pre$cube_root, breaks = 50)
hist(allyears_pertown_post$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 100)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 100)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 200)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 200)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 50)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 10)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 10)
hist(allyears_pertown_pre$cube_root, breaks = 10)
allyears_pertown_post$cube_root <- (allyears_pertown_post$patch_loss_area)^(0.3333)
hist(allyears_pertown_post$cube_root, breaks = 10)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 20)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 20)
allyears_pertown_pre$cube_root <- (allyears_pertown_pre$patch_loss_area)^(0.3333)
hist(allyears_pertown_pre$cube_root, breaks = 50)
allyears_pertown_post$cube_root <- (allyears_pertown_post$patch_loss_area)^(0.3333)
hist(allyears_pertown_post$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 50)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 50)
# Initial distributions of avg patch area
hist(allyears_pertown_pre$avg_patch_area)
# Initial distributions of avg patch area
hist(allyears_pertown_pre$avg_patch_area, breaks = 20)
hist(allyears_pertown_post$avg_patch_area, breaks = 20)
# Initial distributions of avg patch area
hist(allyears_pertown_pre$avg_patch_area, breaks = 20)
hist(allyears_pertown_post$avg_patch_area, breaks = 20)
allyears_pertown_pre$patch_area_square_root <- (allyears_pertown_pre$avg_patch_area)^(0.5)
hist(allyears_pertown_pre$patch_area_square_root, breaks = 50)
allyears_pertown_post$patch_area_square_root <- (allyears_pertown_post$avg_patch_area)^(0.5)
hist(allyears_pertown_post$patch_area_square_root, breaks = 50)
library(datasets)
library(stats)
library(zoo)
library(tidyverse)
data("AirPassengers")
allyears_pertown <- read.csv("./data/outputs/Myanmar_TownshipForestLossFragmentation.csv")
# Select down to just total area of patches lost
allyears_pertown <- allyears_pertown %>%
select(-X) %>%
rename(township = Township) %>%
rename(year = Year) %>%
rename(number_patches = `Number.of.Loss.Patches`) %>%
rename(avg_patch_area = Avg.Patch.Size) %>%
rename(patch_loss_area = `Total.Area.of.Loss.Patches`)
# Remove NAs
allyears_pertown <- na.omit(allyears_pertown)
allyears_pertown_pre <- allyears_pertown %>%
filter(year < 2011)
allyears_pertown_post <- allyears_pertown %>%
filter(year >= 2011)
# Initial distributions of per town loss
hist(allyears_pertown_pre$patch_loss_area, breaks = 50)
hist(allyears_pertown_post$patch_loss_area, breaks = 50)
allyears_pertown_pre$square_root <- (allyears_pertown_pre$patch_loss_area)^(0.5)
hist(allyears_pertown_pre$square_root, breaks = 50)
allyears_pertown_post$square_root <- (allyears_pertown_post$patch_loss_area)^(0.5)
hist(allyears_pertown_post$square_root, breaks = 50)
# Cube root, θ = 1/3
allyears_pertown_pre$cube_root <- (allyears_pertown_pre$patch_loss_area)^(0.3333)
hist(allyears_pertown_pre$cube_root, breaks = 50)
allyears_pertown_post$cube_root <- (allyears_pertown_post$patch_loss_area)^(0.3333)
hist(allyears_pertown_post$cube_root, breaks = 50)
# Log, θ = 0
hist(log(allyears_pertown_pre$patch_loss_area), breaks = 50)
hist(log(allyears_pertown_post$patch_loss_area), breaks = 50)
# Initial distributions of avg patch area
hist(allyears_pertown_pre$avg_patch_area, breaks = 20)
hist(allyears_pertown_post$avg_patch_area, breaks = 20)
# Square root, θ = 1/2
allyears_pertown_pre$patch_area_square_root <- (allyears_pertown_pre$avg_patch_area)^(0.5)
hist(allyears_pertown_pre$patch_area_square_root, breaks = 50)
allyears_pertown_post$patch_area_square_root <- (allyears_pertown_post$avg_patch_area)^(0.5)
hist(allyears_pertown_post$patch_area_square_root, breaks = 50)
timeSeries <- as.ts(allyears_pertown_pre$patch_loss_area, start = 2001, end = 2017,
frequency = 1)
allyears_pertown_pre$year
allyears_pertown_post$year
timeSeries_pre <- as.ts(allyears_pertown_pre$patch_loss_area, start = 2001, end = 2010,
frequency = 1)
timeSeries_post <- as.ts(allyears_pertown_post$patch_loss_area, start = 2011, end = 2017,
frequency = 1)
start <- timeSeries_pre$Year[1] # year 1 = 2001
timeSeries_pre
?arima
?summarize
View(allyears_pertown)
?summarize_each
pertown_pre <- allyears_pertown %>%
filter(year < 2011) %>%
gather(year) %>%
summarize_all(mean)
View(pertown_pre)
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
gather(year) %>%
summarize_all(mean)
View(countrywide_pre)
View(countrywide_pre)
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
gather(year)
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township)
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
gather_by(year)
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
countrywide_pre <- allyears_pertown %>%
filter(year >= 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
countrywide_post <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
?ts
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 1, end = 10,
frequency = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
deltat = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
deltat = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 1, end = 10,
deltat = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
?ts
??HoltWinters
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_ts <- HoltWinters(countrywide_pre$patch_loss_area,
gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_ts <- HoltWinters(countrywide_pre$patch_loss_area,
beta = FALSE, gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
countrywide_pre_PLA_ts
countrywide_pre_PLA_ts
View(countrywide_pre_PLA_ts)
countrywide_pre <- countrywide_pre %>%
bind_rows(countrywide_pre)
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
countrywide_post <- allyears_pertown %>%
filter(year >= 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
deltat = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 1)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
countrywide_pre <- countrywide_pre %>%
bind_rows(countrywide_pre)
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 2)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_ts <- HoltWinters(countrywide_pre$patch_loss_area,
beta = FALSE, gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
?HoltWinters
rain <- scan("http://robjhyndman.com/tsdldata/hurst/precip1.dat",skip=1)
rainseries <- ts(rain,start=c(1813))
plot.ts(rainseries)
rain
class(rain)
?ts
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 1)
countrywide_pre_PLA_ts
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_ts <- HoltWinters(countrywide_pre_PLA_ts,
beta = FALSE, gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_ts))
?HoltWinters
class(countrywide_pre_PLA_ts)
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 1)
class(countrywide_pre_PLA_ts)
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_HW <- HoltWinters(countrywide_pre_PLA_ts,
beta = FALSE, gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_HW))
countrywide_pre_PLA_HW
plot(countrywide_pre_PLA_HW)
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
plot(countrywide_pre)
plot(countrywide_pre$patch_loss_area)
## * Pre and post intervention, country-wide loss #########
countrywide_pre <- allyears_pertown %>%
filter(year < 2011) %>%
select(-township) %>%
group_by(year) %>%
summarize_all(mean)
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001, end = 2010,
frequency = 1)
countrywide_pre_PLA_ts
# Make time series of patch loss area
countrywide_pre_PLA_ts <- ts(countrywide_pre$patch_loss_area,
start = 2001,
frequency = 1)
countrywide_pre_PLA_ts
# User Holt Winters filtering instead...decompose spits out an error that the
#   data has less than two periods because it doesn't pick up any seasonality.
# This is because the data is annual and there is no seasonlity. As a fix,
#   HoltWinters allows the user to specify gamma = FALSE (means no seasonality)
countrywide_pre_PLA_HW <- HoltWinters(countrywide_pre_PLA_ts,
beta = FALSE, gamma = FALSE)
# Decompose time series to figure out trends
plot(decompose(countrywide_pre_PLA_HW))
unique(allyears_pertown$township)
plot(allyears_pertown$patch_loss_area)
?plot
plot(allyears_pertown$patch_loss_area, allyears_pertown$year)
plot(allyears_pertown$year, allyears_pertown$patch_loss_area)
plot(patch_loss_area ~ year, allyears_pertown)
plot(mean(patch_loss_area) ~ year, allyears_pertown)
?lm
install.packages('residPlot')
